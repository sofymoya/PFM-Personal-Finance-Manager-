---
# Avance PFM Cursor (Backend & Frontend)

## Automatización de arranque
- Se creó el script `backend/start_services.sh` para arrancar backend y frontend en background, con logs y manejo de procesos previos.
- El script verifica el entorno virtual, activa el backend en http://localhost:8000/ y el frontend en http://localhost:5173/ (o el puerto que indique Vite).

## Limpieza y actualización de entorno
- Se eliminó y recreó el entorno virtual (`venv`) en backend.
- Se reinstalaron dependencias con `pip install -r requirements.txt` y `npm install` en frontend.
- Se actualizó la librería `openai` para evitar errores de proxies.

## Extracción de PDF y OCR
- Se mejoró la función de extracción de texto para detectar cuando es necesario usar OCR.
- Se agregó logging detallado para debug de cada página y chunk.
- Se implementó chunking para evitar errores de límite de tokens en OpenAI.
- Se mejoró la limpieza de texto OCR para evitar caracteres corruptos.

## Extracción agéntica y fallback AI
- Se integró un extractor agéntico basado en OpenAI GPT-4o-mini para extraer transacciones de cualquier PDF.
- Se corrigió el manejo de proxies y la inicialización del cliente OpenAI.
- Se mejoró el fallback AI para dividir el texto en chunks y manejar errores de contexto.

## Detección de banco y parsers
- Se mejoró la detección de banco (case-insensitive, priorizando Santander, BBVA, HSBC, Banorte, Banamex, Banregio).
- Se corrigieron errores en los parsers específicos (HSBC, Santander, BBVA).

## Manejo de errores y logs
- Se agregaron validaciones para evitar errores de tipo al guardar transacciones.
- Se mejoró el logging de errores de AI, proxies y parseo de JSON.

## Otros
- Se documentó el flujo de arranque y pruebas.
- Se resolvieron conflictos de puertos y procesos colgados.

--- 